--
-- Generated by VASY
--
ENTITY control IS
PORT(
  cc_clk	: IN BIT;
  cc_reset	: IN BIT;
  cc_start	: IN BIT;
  cc_p	: IN BIT_VECTOR(8 DOWNTO 0);
  cc_n	: IN BIT_VECTOR(7 DOWNTO 0);
  cc_init	: OUT BIT;
  cc_ld_op1	: OUT BIT;
  cc_ld_op2	: OUT BIT;
  cc_add_b_to_p	: OUT BIT;
  cc_shift_left_p	: OUT BIT;
  cc_subtract_from_p	: OUT BIT;
  cc_add_to_p1	: OUT BIT;
  cc_shift_left_a1	: OUT BIT;
  cc_add_to_p2	: OUT BIT;
  cc_shift_left_a2	: OUT BIT;
  cc_add_to_a	: OUT BIT;
  cc_ld_r	: OUT BIT;
  cc_ready	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END control;

ARCHITECTURE VBE OF control IS

  SIGNAL rtlalc_0	: REG_BIT REGISTER;
  SIGNAL rtldef_22	: BIT;
  SIGNAL rtldef_21	: BIT;
  SIGNAL rtldef_20	: BIT;
  SIGNAL rtldef_19	: BIT;
  SIGNAL rtldef_18	: BIT;
  SIGNAL rtldef_17	: BIT;
  SIGNAL rtldef_16	: BIT;
  SIGNAL rtldef_15	: BIT;
  SIGNAL rtldef_14	: BIT;
  SIGNAL rtldef_13	: BIT;
  SIGNAL rtldef_12	: BIT;
  SIGNAL rtldef_11	: BIT;
  SIGNAL rtldef_10	: BIT;
  SIGNAL rtldef_9	: BIT;
  SIGNAL rtldef_8	: BIT;
  SIGNAL rtldef_7	: BIT;
  SIGNAL rtldef_6	: BIT;
  SIGNAL rtldef_5	: BIT;
  SIGNAL rtldef_4	: BIT;
  SIGNAL rtldef_3	: BIT;
  SIGNAL rtldef_2	: BIT;
  SIGNAL rtldef_1	: BIT;
  SIGNAL rtldef_0	: BIT;
  SIGNAL currentstate	: REG_VECTOR(0 TO 3) REGISTER;
  SIGNAL nextstate	: BIT_VECTOR(0 TO 3);
  SIGNAL ld_r_ready	: BIT;
  SIGNAL clc_def_19	: BIT;
  SIGNAL clc_def_18	: BIT;
  SIGNAL clc_def_17	: BIT;
BEGIN

  cc_ready <= rtlalc_0;
  LABEL0 : BLOCK  ((cc_clk = '1') AND NOT(cc_clk'STABLE) )
  BEGIN
    rtlalc_0 <= GUARDED (rtldef_22 AND ld_r_ready);
  END BLOCK LABEL0;
  rtldef_22 <= '1' WHEN NOT((cc_reset = '1')) ELSE
     '0';
  cc_ld_r <= ld_r_ready;
  ld_r_ready <= '1' WHEN (currentstate = "0101") ELSE
     '0';
  cc_shift_left_a2 <= '1' WHEN (currentstate = "1001") ELSE
     '0';
  cc_add_to_a <= '1' WHEN (currentstate = "0001") ELSE
     '0';
  cc_add_to_p2 <= '1' WHEN (currentstate = "1110") ELSE
     '0';
  cc_shift_left_a1 <= '1' WHEN (currentstate = "0110") ELSE
     '0';
  cc_subtract_from_p <= '1' WHEN (currentstate = "1010") ELSE
     '0';
  cc_add_to_p1 <= '1' WHEN (currentstate = "0010") ELSE
     '0';
  cc_shift_left_p <= '1' WHEN (currentstate = "1100") ELSE
     '0';
  cc_add_b_to_p <= '1' WHEN (currentstate = "0100") ELSE
     '0';
  cc_ld_op2 <= '1' WHEN (currentstate = "1000") ELSE
     '0';
  cc_ld_op1 <= '1' WHEN (currentstate = "1000") ELSE
     '0';
  cc_init <= '1' WHEN (currentstate = "0000") ELSE
     '0';
  LABEL1 : BLOCK  ((cc_clk = '1') AND NOT(cc_clk'STABLE) )
  BEGIN
    currentstate <= GUARDED ((rtldef_21 & rtldef_21 & rtldef_21 & rtldef_21) AND nextstate);
  END BLOCK LABEL1;
  rtldef_21 <= '1' WHEN NOT((cc_reset = '1')) ELSE
     '0';
  rtldef_20 <= '1' WHEN ((currentstate(3) AND NOT(currentstate(2)) AND currentstate(1) AND NOT(currentstate(0)
)) = '1') ELSE
     '0';
  rtldef_19 <= '1' WHEN ((currentstate(3) AND NOT(currentstate(2)) AND NOT(currentstate(1)) AND NOT(currentstate(0)
)) = '1') ELSE
     '0';
  rtldef_18 <= '1' WHEN ((currentstate(3) AND NOT(currentstate(2)) AND NOT(currentstate(1)) AND currentstate(0)
) = '1') ELSE
     '0';
  rtldef_17 <= '1' WHEN ((NOT(currentstate(3)) AND currentstate(2) AND currentstate(1) AND currentstate(0)
) = '1') ELSE
     '0';
  rtldef_16 <= '1' WHEN ((currentstate(3) AND currentstate(2) AND NOT(currentstate(1)) AND NOT(currentstate(0)
)) = '1') ELSE
     '0';
  rtldef_15 <= '1' WHEN ((NOT(currentstate(3)) AND currentstate(2) AND currentstate(1) AND NOT(currentstate(0)
)) = '1') ELSE
     '0';
  rtldef_14 <= '1' WHEN ((NOT(currentstate(3)) AND currentstate(2) AND NOT(currentstate(1)) AND currentstate(0)
) = '1') ELSE
     '0';
  rtldef_13 <= '1' WHEN ((NOT(currentstate(3)) AND currentstate(2) AND NOT(currentstate(1)) AND NOT(currentstate(0)
)) = '1') ELSE
     '0';
  rtldef_12 <= '1' WHEN ((NOT(currentstate(3)) AND NOT(currentstate(2)) AND currentstate(1) AND currentstate(0)
) = '1') ELSE
     '0';
  rtldef_11 <= '1' WHEN ((currentstate(3) AND NOT(currentstate(2)) AND currentstate(1) AND currentstate(0)
) = '1') ELSE
     '0';
  rtldef_10 <= '1' WHEN ((NOT(currentstate(3)) AND NOT(currentstate(2)) AND currentstate(1) AND NOT(currentstate(0)
)) = '1') ELSE
     '0';
  rtldef_9 <= '1' WHEN ((NOT(currentstate(3)) AND NOT(currentstate(2)) AND NOT(currentstate(1)) AND currentstate(0)
) = '1') ELSE
     '0';
  rtldef_8 <= '1' WHEN ((NOT(currentstate(3)) AND NOT(currentstate(2)) AND NOT(currentstate(1)) AND 
NOT(currentstate(0))) = '1') ELSE
     '0';
  nextstate <= (((rtldef_8 & rtldef_8 & rtldef_8 & rtldef_8) AND ((rtldef_7 & rtldef_7 & rtldef_7
 & rtldef_7) AND "1000")) OR ((rtldef_9 & rtldef_9 & rtldef_9 & rtldef_9) AND "0100"
) OR ((rtldef_10 & rtldef_10 & rtldef_10 & rtldef_10) AND "1101") OR ((rtldef_11
 & rtldef_11 & rtldef_11 & rtldef_11) AND "1100") OR ((rtldef_12 & rtldef_12 & rtldef_12
 & rtldef_12) AND (((rtldef_5 & rtldef_5 & rtldef_5 & rtldef_5) AND "1010") OR (
(rtldef_6 & rtldef_6 & rtldef_6 & rtldef_6) AND "0010"))) OR ((rtldef_13 & rtldef_13
 & rtldef_13 & rtldef_13) AND "0110") OR ((rtldef_14 & rtldef_14 & rtldef_14 & rtldef_14
) AND "0110") OR ((rtldef_15 & rtldef_15 & rtldef_15 & rtldef_15) AND (((rtldef_3
 & rtldef_3 & rtldef_3 & rtldef_3) AND "1101") OR ((rtldef_4 & rtldef_4 & rtldef_4
 & rtldef_4) AND "0011"))) OR ((rtldef_16 & rtldef_16 & rtldef_16 & rtldef_16) 
AND (((rtldef_1 & rtldef_1 & rtldef_1 & rtldef_1) AND "0001") OR ((rtldef_2 & rtldef_2
 & rtldef_2 & rtldef_2) AND "1110"))) OR ((rtldef_17 & rtldef_17 & rtldef_17 & rtldef_17
) AND "0001") OR ((rtldef_18 & rtldef_18 & rtldef_18 & rtldef_18) AND "0001") OR
 ((rtldef_19 & rtldef_19 & rtldef_19 & rtldef_19) AND "0101") OR ((rtldef_20 & rtldef_20
 & rtldef_20 & rtldef_20) AND ((rtldef_0 & rtldef_0 & rtldef_0 & rtldef_0) AND "0101"
)));
  rtldef_7 <= '1' WHEN (cc_start = '1') ELSE
     '0';
  rtldef_6 <= '1' WHEN clc_def_19 ELSE
     '0';
  rtldef_5 <= '1' WHEN NOT(clc_def_19) ELSE
     '0';
  clc_def_19 <= (cc_p(8) = '1');
  rtldef_4 <= '1' WHEN clc_def_18 ELSE
     '0';
  rtldef_3 <= '1' WHEN NOT(clc_def_18) ELSE
     '0';
  clc_def_18 <= (cc_n = "00000000");
  rtldef_2 <= '1' WHEN clc_def_17 ELSE
     '0';
  rtldef_1 <= '1' WHEN NOT(clc_def_17) ELSE
     '0';
  clc_def_17 <= (cc_p(8) = '1');
  rtldef_0 <= '1' WHEN NOT((cc_start = '1')) ELSE
     '0';
END VBE;
