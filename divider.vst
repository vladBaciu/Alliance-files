--
-- Generated by VASY
--
ENTITY divider IS
PORT(
  ck	: IN BIT;
  reset_n	: IN BIT;
  op1	: IN BIT_VECTOR(7 DOWNTO 0);
  op2	: IN BIT_VECTOR(7 DOWNTO 0);
  cat	: OUT BIT_VECTOR(7 DOWNTO 0);
  rest	: OUT BIT_VECTOR(8 DOWNTO 0);
  start	: IN BIT;
  valid	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END divider;

ARCHITECTURE VST OF divider IS

  SIGNAL p	: BIT_VECTOR(8 DOWNTO 0);
  SIGNAL n	: BIT_VECTOR(7 DOWNTO 0);
  SIGNAL init	: BIT;
  SIGNAL ld_op1	: BIT;
  SIGNAL ld_op2	: BIT;
  SIGNAL add_b_to_p	: BIT;
  SIGNAL shift_left_p	: BIT;
  SIGNAL subtract_from_p	: BIT;
  SIGNAL add_to_p1	: BIT;
  SIGNAL shift_left_a1	: BIT;
  SIGNAL add_to_p2	: BIT;
  SIGNAL shift_left_a2	: BIT;
  SIGNAL add_to_a	: BIT;
  SIGNAL ld_r	: BIT;

  COMPONENT date
  PORT(
  vss	: IN BIT;
  vdd	: IN BIT;
  cd_clk	: IN BIT;
  cd_reset	: IN BIT;
  cd_op1	: IN BIT_VECTOR(7 DOWNTO 0);
  cd_op2	: IN BIT_VECTOR(7 DOWNTO 0);
  cd_init	: IN BIT;
  cd_ld_op1	: IN BIT;
  cd_ld_op2	: IN BIT;
  cd_add_b_to_p	: IN BIT;
  cd_shift_left_p	: IN BIT;
  cd_subtract_from_p	: IN BIT;
  cd_add_to_p1	: IN BIT;
  cd_shift_left_a1	: IN BIT;
  cd_add_to_p2	: IN BIT;
  cd_shift_left_a2	: IN BIT;
  cd_add_to_a	: IN BIT;
  cd_ld_r	: IN BIT;
  cd_n	: OUT BIT_VECTOR(7 DOWNTO 0);
  cd_p	: OUT BIT_VECTOR(8 DOWNTO 0);
  cd_cat	: OUT BIT_VECTOR(7 DOWNTO 0);
  cd_rest	: OUT BIT_VECTOR(8 DOWNTO 0)
  );
  END COMPONENT;

  COMPONENT control
  PORT(
  vss	: IN BIT;
  vdd	: IN BIT;
  cc_clk	: IN BIT;
  cc_reset	: IN BIT;
  cc_start	: IN BIT;
  cc_p	: IN BIT_VECTOR(8 DOWNTO 0);
  cc_n	: IN BIT_VECTOR(7 DOWNTO 0);
  cc_init	: OUT BIT;
  cc_ld_op1	: OUT BIT;
  cc_ld_op2	: OUT BIT;
  cc_add_b_to_p	: OUT BIT;
  cc_shift_left_p	: OUT BIT;
  cc_subtract_from_p	: OUT BIT;
  cc_add_to_p1	: OUT BIT;
  cc_shift_left_a1	: OUT BIT;
  cc_add_to_p2	: OUT BIT;
  cc_shift_left_a2	: OUT BIT;
  cc_add_to_a	: OUT BIT;
  cc_ld_r	: OUT BIT;
  cc_ready	: OUT BIT
  );
  END COMPONENT;

BEGIN

  i_ctrl : control
  PORT MAP (
    cc_p(8 downto 0) => p,
    cc_n(7 downto 0) => n,
    cc_ready => valid,
    cc_ld_r => ld_r,
    cc_add_to_a => add_to_a,
    cc_shift_left_a2 => shift_left_a2,
    cc_add_to_p2 => add_to_p2,
    cc_shift_left_a1 => shift_left_a1,
    cc_add_to_p1 => add_to_p1,
    cc_subtract_from_p => subtract_from_p,
    cc_shift_left_p => shift_left_p,
    cc_add_b_to_p => add_b_to_p,
    cc_ld_op2 => ld_op2,
    cc_ld_op1 => ld_op1,
    cc_init => init,
    cc_start => start,
    cc_reset => reset_n,
    cc_clk => ck,
    vdd => vdd,
    vss => vss
  );
  i_date : date
  PORT MAP (
    cd_op1(7 downto 0) => op1,
    cd_op2(7 downto 0) => op2,
    cd_n(7 downto 0) => n,
    cd_p(8 downto 0) => p,
    cd_cat(7 downto 0) => cat,
    cd_rest(8 downto 0) => rest,
    cd_ld_r => ld_r,
    cd_add_to_a => add_to_a,
    cd_shift_left_a2 => shift_left_a2,
    cd_add_to_p2 => add_to_p2,
    cd_shift_left_a1 => shift_left_a1,
    cd_add_to_p1 => add_to_p1,
    cd_subtract_from_p => subtract_from_p,
    cd_shift_left_p => shift_left_p,
    cd_add_b_to_p => add_b_to_p,
    cd_ld_op2 => ld_op2,
    cd_ld_op1 => ld_op1,
    cd_init => init,
    cd_reset => reset_n,
    cd_clk => ck,
    vdd => vdd,
    vss => vss
  );
END VST;
